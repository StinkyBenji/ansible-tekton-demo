---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: ansible-ee-pipeline
  annotations:
    pipelinesascode.tekton.dev/max-keep-runs: "5"
    pipelinesascode.tekton.dev/task: "[git-clone, gitleaks, hadolint, trivy-scanner, syft, grype]"
    pipelinesascode.tekton.dev/task-2: "[.tekton/tasks/ansible-lint.yaml]"
    pipelinesascode.tekton.dev/task-3: "[.tekton/tasks/ansible-builder-create.yaml]"
    pipelinesascode.tekton.dev/task-4: "https://raw.githubusercontent.com/StinkyBenji/some-tekton/main/tasks/buildah.yaml"
    pipelinesascode.tekton.dev/task-6: "[.tekton/tasks/semantic-release.yaml]"
    pipelinesascode.tekton.dev/task-7: "[.tekton/tasks/skopeo-copy.yaml]"
    pipelinesascode.tekton.dev/task-8: "[.tekton/tasks/delete-image-stream.yaml]"
    pipelinesascode.tekton.dev/on-cel-expression: |
      (event == "push" || event == "pull_request") && target_branch == "main" && ("ansible-ee/***".pathChanged() || ".tekton/ansible-ee-pipeline.yaml".pathChanged())
spec:
  serviceAccountName: pipelines-sa
  podTemplate:
    env:
      - name: HOME
        value: "/tekton/home"
  params:
    - name: repo_url
      value: "{{ repo_url }}"
    - name: revision
      value: "{{ revision }}"
  pipelineSpec:
    params:
      - name: repo_url
      - name: revision
    workspaces:
      - name: source
    tasks:
      - name: fetch-repository
        taskRef:
          name: git-clone
        workspaces:
          - name: output
            workspace: source
        params:
          - name: url
            value: $(params.repo_url)
          - name: revision
            value: $(params.revision)

      - name: ansible-lint
        runAfter:
          - fetch-repository
        taskRef:
          name: ansible-lint
        workspaces:
          - name: source
            workspace: source

      - name: ansible-builder-create
        runAfter:
          - ansible-lint
        taskRef:
          name: ansible-builder-create
          kind: Task
        workspaces:
          - name: source
            workspace: source
        params:
          - name: OUTPUT_FILENAME
            value: Dockerfile
          - name: PATH
            value: "ansible-ee"

      - name: build-image-tag
        taskRef:
          name: buildah
        workspaces:
          - name: source
            workspace: source
        runAfter:
          - ansible-builder-create
        params:
          - name: TLSVERIFY
            value: "false"
          - name: IMAGE
            value: image-registry.openshift-image-registry.svc:5000/image-build/custom-ansible-ee
          - name: CONTEXT
            value: "ansible-ee"

      - name: image-scan
        taskRef:
          name: trivy-scanner
        workspaces:
          - name: manifest-dir
            workspace: source
        runAfter:
          - build-image-tag
        params:
          - name: IMAGE_PATH
            value: $(tasks.build-image-tag.results.IMAGE_URL)
          - name: ARGS
            value:
              - "image"
              - "--severity HIGH,CRITICAL"
              - "--ignore-unfixed"

      # - name: semantic-release
      #   when:
      #     - input: "{{ source_branch }}"
      #       operator: in
      #       values: ["main"]
      #   runAfter:
      #     - ee-sanity-test
      #   taskRef:
      #     name: semantic-release
      #   workspaces:
      #     - name: source
      #       workspace: source
      #   params:
      #     - name: source-branch
      #       value: "{{ source_branch }}"

      # - name: push-image-tag
      #   when:
      #     - input: "{{ source_branch }}"
      #       operator: in
      #       values: ["main"]
      #   runAfter:
      #     - semantic-release
      #   taskRef:
      #     name: skopeo-copy
      #   workspaces:
      #     - name: source
      #       workspace: source
      #   params:
      #     - name: srcImageURL
      #       value: "docker://$(tasks.build-image-tag.results.IMAGE_URL)"
      #     - name: destImageURL
      #       value: "docker://quay.io/stbenji/ansible-tekton-demo:$(tasks.semantic-release.results.version)"

      # - name: update-image-latest
      #   when:
      #     - input: "{{ source_branch }}"
      #       operator: in
      #       values: ["main"]
      #   runAfter:
      #     - semantic-release
      #   taskRef:
      #     name: skopeo-copy
      #   workspaces:
      #     - name: source
      #       workspace: source
      #   params:
      #     - name: srcImageURL
      #       value: "docker://$(tasks.build-image-tag.results.IMAGE_URL)"
      #     - name: destImageURL
      #       value: "docker://quay.io/stbenji/ansible-tekton-demo:latest"

      # finally:
      #   - name: clean-up
      #     when:
      #       - input: "{{ source_branch }}"
      #         operator: in
      #         values: ["main"]
      #     taskRef:
      #       name: delete-image-stream
      #     workspaces:
      #       - name: source
      #         workspace: source
      #     params:
      #       - name: IMAGE_STREAM
      #         value: custom-ansible-ee

  workspaces:
    - name: source
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 5Gi
