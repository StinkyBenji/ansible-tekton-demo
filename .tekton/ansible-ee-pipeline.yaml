---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: ansible-ee-pipeline
  annotations:
    pipelinesascode.tekton.dev/max-keep-runs: "5"
    pipelinesascode.tekton.dev/task: "[git-clone, trivy-scanner]"
    pipelinesascode.tekton.dev/task-1: "[.tekton/tasks/gitleaks.yaml]"
    pipelinesascode.tekton.dev/task-2: "[.tekton/tasks/ansible-lint.yaml]"
    pipelinesascode.tekton.dev/task-3: "[.tekton/tasks/ansible-builder-create.yaml]"
    pipelinesascode.tekton.dev/task-4: "[.tekton/tasks/buildah.yaml]"
    pipelinesascode.tekton.dev/task-5: "[.tekton/tasks/ansible-ee-sanity-test.yaml]"
    pipelinesascode.tekton.dev/task-6: "[.tekton/tasks/semantic-release.yaml]"
    pipelinesascode.tekton.dev/task-7: "[.tekton/tasks/push-ee-image.yaml]"
    pipelinesascode.tekton.dev/task-8: "[.tekton/tasks/delete-image-stream.yaml]"
    pipelinesascode.tekton.dev/on-cel-expression: |
      event == "push" || event == "pull_request" && target_branch == "main" && "examples/ansible-ee/***".pathChanged() || ".tekton/ansible-ee-pipeline.yaml".pathChanged()
spec:
  params:
    - name: repo_url
      value: "{{ repo_url }}"
    - name: revision
      value: "{{ revision }}"
  pipelineSpec:
    params:
      - name: repo_url
      - name: revision
    workspaces:
      - name: source
      - name: quay-credentials
      - name: registry-credentials
    tasks:
      - name: fetch-repository
        taskRef:
          name: git-clone
        workspaces:
          - name: output
            workspace: source
        params:
          - name: url
            value: $(params.repo_url)
          - name: revision
            value: $(params.revision)

      - name: detect-secrets
        runAfter:
          - fetch-repository
        taskRef:
          name: gitleaks
        workspaces:
          - name: source
            workspace: source
        params:
          - name: config_file_url
            value: https://raw.githubusercontent.com/tektoncd/catalog/main/task/gitleaks/0.1/samples/gitleaks.toml
          - name: config_file_path
            value: gitleaks.toml
          - name: report_output_path
            value: gitleaks-report.json

      - name: ansible-lint
        runAfter:
          - fetch-repository
        taskRef:
          name: ansible-lint
        workspaces:
          - name: source
            workspace: source

      - name: ansible-builder-create
        runAfter:
          - ansible-lint
        taskRef:
          name: ansible-builder-create
          kind: Task
        workspaces:
          - name: source
            workspace: source
        params:
          - name: OUTPUT_FILENAME
            value: Dockerfile
          - name: PATH
            value: "examples/ansible-ee"

      - name: build-image-tag
        taskRef:
          name: buildah
        workspaces:
          - name: source
            workspace: source
          - name: dockerconfig
            workspace: registry-credentials
        runAfter:
          - ansible-builder-create
        params:
          - name: TLSVERIFY
            value: "false"
          - name: IMAGE
            value: image-registry.openshift-image-registry.svc:5000/ansible-tekton-demo/custom-ansible-ee
          - name: TAG
            value: "{{ pull_request_number }}"
          - name: CONTEXT
            value: "examples/ansible-ee"

      - name: ee-sanity-test
        taskRef:
          name: ansible-ee-sanity-test
        workspaces:
          - name: source
            workspace: source
        runAfter:
          - build-image-tag
        params:
          - name: IMAGE
            value: default-route-openshift-image-registry.apps.ocp4.whatever.out-of-my-head.de/ansible-tekton-demo/custom-ansible-ee
          - name: TAG
            value: "{{ pull_request_number }}"

      - name: image-scan
        taskRef:
          name: trivy-scanner
        workspaces:
          - name: manifest-dir
            workspace: source
        runAfter:
          - build-image-tag
        params:
          - name: IMAGE_PATH
            value: $(tasks.build-image-tag.results.IMAGE_URL)
          - name: ARGS
            value:
              - "image"
              - "--severity HIGH,CRITICAL"
              - "--ignore-unfixed"

      - name: semantic-release
        when:
          - input: "{{ source_branch }}"
            operator: in
            values: ["feat/update-push-image-tag"]
        runAfter:
          - ee-sanity-test
        taskRef:
          name: semantic-release
        workspaces:
          - name: source
            workspace: source
        params:
          - name: source-branch
            value: "{{ source_branch }}"

      - name: push-ee-image
        when:
          - input: "{{ source_branch }}"
            operator: in
            values: ["feat/update-push-image-tag"]
        runAfter:
          - semantic-release
        taskRef:
          name: push-ee-image
        workspaces:
          - name: source
            workspace: source
        params:
          - name: srcImageURL
            value: $(tasks.build-image-tag.results.IMAGE_URL)
          - name: destImageURL
            value: quay.io/stbenji/ansible-tekton-demo
          - name: tag
            value: $(tasks.semantic-release.results.version)

      - name: update-latest-tag
        when:
          - input: "{{ source_branch }}"
            operator: in
            values: ["feat/update-push-image-tag"]
        runAfter:
          - semantic-release
        taskRef:
          name: push-ee-image
        workspaces:
          - name: source
            workspace: source
        params:
          - name: srcImageURL
            value: $(tasks.build-image-tag.results.IMAGE_URL)
          - name: destImageURL
            value: quay.io/stbenji/ansible-tekton-demo
          - name: tag
            value: "latest"

      # finally:
      - name: clean-up
        when:
          - input: "{{ source_branch }}"
            operator: in
            values: ["main"]
        taskRef:
          name: delete-image-stream
        workspaces:
          - name: source
            workspace: source
        params:
          - name: IMAGE_STREAM
            value: custom-ansible-ee

  workspaces:
    - name: source
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 5Gi
    - name: quay-credentials
      secret:
        secretName: quay-credentials
    - name: registry-credentials
      secret:
        secretName: registry-credentials
